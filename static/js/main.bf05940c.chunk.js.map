{"version":3,"sources":["components/EmogiButton/EmojiButton.tsx","components/EmojiBox/EmojiTab.tsx","components/EmojiBox/EmojiBox.tsx","App.tsx","index.tsx"],"names":["EmojiButton","onClick","className","role","width","height","fill","xlinkHref","EmojiTab","activeTab","tabName","onTabChange","tabs","EmojiBox","useState","setActiveTab","map","tab","App","text","setText","isEmojiBoxOpened","setEmojiBoxOpened","placeholder","aria-multiline","contentEditable","suppressContentEditableWarning","onChange","event","target","value","tabIndex","CSSTransition","in","timeout","classNames","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"mOAIaA,EAA0C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxD,OACE,qBAAKC,UAAU,cAAcC,KAAK,SAASF,QAASA,EAApD,SACE,qBAAKG,MAAM,KAAKC,OAAO,KAAKC,KAAK,OAAjC,SACE,qBAAKC,UAAU,sBCFVC,G,MAAoC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACtE,OACE,qBAAKT,UAAS,yBAAoBO,IAAcC,EAAU,yBAA2B,IAAMT,QAASU,EAApG,SACE,qBAAKP,MAAM,KAAKC,OAAO,KAAKC,KAAK,OAAjC,SACE,qBAAKC,UAAS,iBAAYG,WCN5BE,EAAO,CAAC,QAAS,UAEVC,EAAW,WACtB,MAAkCC,mBAAiBF,EAAK,IAAxD,mBAAOH,EAAP,KAAkBM,EAAlB,KAIA,OACE,sBAAKb,UAAU,YAAf,UACE,qBAAKA,UAAU,cACf,qBAAKA,UAAU,kBAAf,SACGU,EAAKI,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,CAAUR,UAAWA,EAAqBC,QAASO,EAAKN,YAAa,kBAPzD,SAACM,GAAD,OAAiBF,EAAaE,GAOiCN,CAAYM,KAAlDA,Y,QCXlCC,EAAM,WACjB,MAAwBJ,mBAAiB,IAAzC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA8CN,oBAAkB,GAAhE,mBAAOO,EAAP,KAAyBC,EAAzB,KAMA,OACE,qBAAKpB,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBACEA,UAAU,eACVC,KAAK,UACLoB,YAAY,kFACZC,iBAAe,OACfC,gBAAgB,OAChBC,gCAAgC,EAChCC,SAda,SAACC,GACpBR,EAAQQ,EAAMC,OAAOC,QAcfC,SAAU,EARZ,SAUGZ,IAEH,cAAC,EAAD,CAAalB,QAAS,kBAAMqB,GAAmBD,MAC/C,cAACW,EAAA,EAAD,CAAeC,GAAIZ,EAAkBa,QAAS,IAAKC,WAAW,YAAYC,eAAa,EAAvF,SACE,cAAC,EAAD,YC1BVC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf05940c.chunk.js","sourcesContent":["interface EmojiButtonProps {\n  onClick: () => void;\n}\n\nexport const EmojiButton: React.FC<EmojiButtonProps> = ({ onClick }) => {\n  return (\n    <div className=\"input__icon\" role=\"button\" onClick={onClick}>\n      <svg width=\"20\" height=\"20\" fill=\"none\">\n        <use xlinkHref=\"#emoji-smile\" />\n      </svg>\n    </div>\n  );\n};\n","interface EmojiTabProps {\n  activeTab: string;\n  tabName: string;\n  onTabChange: () => void;\n}\n\nexport const EmojiTab: React.FC<EmojiTabProps> = ({ activeTab, tabName, onTabChange }) => {\n  return (\n    <div className={`emoji-box__tab ${activeTab === tabName ? 'emoji-box__tab--active' : ''}`} onClick={onTabChange}>\n      <svg width=\"20\" height=\"20\" fill=\"none\">\n        <use xlinkHref={`#emoji-${tabName}`} />\n      </svg>\n    </div>\n  );\n};\n","import './EmogiBox.css';\nimport { useState } from 'react';\nimport { EmojiTab } from './EmojiTab';\n\nconst tabs = ['smile', 'recent'];\n\nexport const EmojiBox = () => {\n  const [activeTab, setActiveTab] = useState<string>(tabs[0]);\n\n  const onTabChange = (tab: string) => setActiveTab(tab);\n\n  return (\n    <div className=\"emoji-box\">\n      <div className=\"ui-scroll\"></div>\n      <div className=\"emoji-box__tabs\">\n        {tabs.map(tab => (\n          <EmojiTab activeTab={activeTab} key={tab} tabName={tab} onTabChange={() => onTabChange(tab)} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { EmojiButton } from './components/EmogiButton/EmojiButton';\nimport { EmojiBox } from './components/EmojiBox/EmojiBox';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const App = () => {\n  const [text, setText] = useState<string>('');\n  const [isEmojiBoxOpened, setEmojiBoxOpened] = useState<boolean>(false);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"input\">\n        <div\n          className=\"input__field\"\n          role=\"textbox\"\n          placeholder=\"Ваше сообщение\"\n          aria-multiline=\"true\"\n          contentEditable=\"true\"\n          suppressContentEditableWarning={true}\n          onChange={handleChange}\n          tabIndex={0}\n        >\n          {text}\n        </div>\n        <EmojiButton onClick={() => setEmojiBoxOpened(!isEmojiBoxOpened)} />\n        <CSSTransition in={isEmojiBoxOpened} timeout={200} classNames=\"emoji-box\" unmountOnExit>\n          <EmojiBox />\n        </CSSTransition>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}